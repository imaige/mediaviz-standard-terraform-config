name: 'Terraform Deploy'

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  issues: write
  security-events: write  # Required for GitHub code scanning alerts

env:
  AWS_REGION: us-east-2
  TERRAFORM_VERSION: "1.10.3"
  SSO_START_URL: "https://d-9a677e96f7.awsapps.com/start"
  SSO_ROLE_NAME: "TerraformDeployRole"
  SSO_ACCOUNT_ID: "379283424934"

jobs:
  security-scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: cli,sarif
          output_file_path: console,results.sarif
          soft_fail: true  # Don't fail the build, but report issues

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: results.sarif

  plan:
    name: 'Terraform Plan'
    needs: security-scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./environments/dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.SSO_ACCOUNT_ID }}:role/${{ env.SSO_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GithubActionsTerraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply:
    name: 'Terraform Apply'
    needs: security-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./environments/dev
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.SSO_ACCOUNT_ID }}:role/${{ env.SSO_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GithubActionsTerraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve